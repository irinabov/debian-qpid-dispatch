Source: qpid-dispatch
Maintainer: Debian Middleware Maintainers <pkg-middleware-maintainers@lists.alioth.debian.org>
Uploaders: Darryl L. Pierce <dpierce@redhat.com>
Section: misc
Priority: optional
Build-Depends: debhelper (>= 9),
               cmake,
               python3-dev,
               dh-python,
               asciidoc (>= 8.6.8),
               asciidoctor,
               dblatex,
               libqpid-proton-core10-dev (>= 0.31.0),
               libqpid-proton-proactor1-dev (>= 0.31.0),
               python3-qpid-proton (>= 0.31.0),
               libssl-dev
Standards-Version: 3.9.7
Homepage: http://qpid.apache.org/components/dispatch-router

Package: qdrouterd
Architecture: any
Depends: libqpid-proton-core10,
         adduser,
         python3,
         ${shlibs:Depends}, ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Replaces:    libqpid-dispatch1, libqpid-dispatch1-dev
Multi-Arch:  same
Description: Qpid Dispatch Router executable
 The Dispatch router is an AMQP router that provides advanced interconnect
 for AMQP. It is not a broker. It will never assume ownership of a message.
 It will, however, propagate settlement and disposition across a network
 such that delivery guarantees are met.
 .
 The router is meant to be deployed in topologies of multiple routers,
 preferably with redundant paths. It uses link-state routing protocols and
 algorithms (similar to OSPF or IS-IS from the networking world) to
 calculate the best path from every point to every other point and to
 recover quickly from failures. It does not need to use clustering for
 high availability; rather, it relies on redundant paths to provide
 continued connectivity in the face of system or network failure.
 .
 A messaging client can make a single AMQP connection into a messaging
 bus built of Dispatch routers and, over that connection, exchange
 messages with one or more message brokers, and at the same time exchange
 messages directly with other endpoints without involving a broker at all.

Package: qdstat
Architecture: all
Depends: python3-qpid-proton (>= 0.31.0),
         python3,
         ${misc:Depends}
Description: Qpid Dispatch stat tool
 The Dispatch router is an AMQP router that provides advanced interconnect
 for AMQP. It is not a broker. It will never assume ownership of a message.
 It will, however, propagate settlement and disposition across a network
 such that delivery guarantees are met.
 .
 The router is meant to be deployed in topologies of multiple routers,
 preferably with redundant paths. It uses link-state routing protocols and
 algorithms (similar to OSPF or IS-IS from the networking world) to
 calculate the best path from every point to every other point and to
 recover quickly from failures. It does not need to use clustering for
 high availability; rather, it relies on redundant paths to provide
 continued connectivity in the face of system or network failure.
 .
 A messaging client can make a single AMQP connection into a messaging
 bus built of Dispatch routers and, over that connection, exchange
 messages with one or more message brokers, and at the same time exchange
 messages directly with other endpoints without involving a broker at all.

Package: qdmanage
Architecture: all
Depends: python3-qpid-proton (>= 0.31.0),
         python3,
         ${misc:Depends}
Description: Qpid Dispatch manage tool
 The Dispatch router is an AMQP router that provides advanced interconnect
 for AMQP. It is not a broker. It will never assume ownership of a message.
 It will, however, propagate settlement and disposition across a network
 such that delivery guarantees are met.
 .
 The router is meant to be deployed in topologies of multiple routers,
 preferably with redundant paths. It uses link-state routing protocols and
 algorithms (similar to OSPF or IS-IS from the networking world) to
 calculate the best path from every point to every other point and to
 recover quickly from failures. It does not need to use clustering for
 high availability; rather, it relies on redundant paths to provide
 continued connectivity in the face of system or network failure.
 .
 A messaging client can make a single AMQP connection into a messaging
 bus built of Dispatch routers and, over that connection, exchange
 messages with one or more message brokers, and at the same time exchange
 messages directly with other endpoints without involving a broker at all.
